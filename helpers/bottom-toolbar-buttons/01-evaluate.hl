
/*
 * Evaluate Hyperlambda button.
 */
button:hypereval-evaluate-snippet
  innerValue:@"<span class=""icon-flash""></span>"
  title:Evaluates the Hyperlambda in your editor - Alt+E
  class:large
  onclick

    /*
     * Retrieving Hyperlambda and evaluating it.
     *
     * Notice, we might want to show the results of evaluation in our output
     * CodeMirror editor after evaluation. Hence, we'll need to use [eval-mutable],
     * and apply some "eval trickery" here to be able to accomplish that.
     *
     * We do this by adding the lambda object into a reference node, which is
     * necessary to be able to use [eval-mutable], and still have the main root
     * node being the root node for our evaluation.
     *
     * First we retrieve code, and convert it to a lambda object.
     */
    get-widget-property:hypereval-input
      innerValue
    hyper2lambda:x:/@get-widget-property/*/*?value

    /*
     * Then we append the lambda into a "reference node", which will allow us
     * to retrieve the lambda as it is after evaluation, while still having
     * our root node being the root node for our [eval-mutable] invocation.
     *
     * Notice, since reference nodes are shallow copies, we'll need to first
     * delete the results of any previous invocations to it.
     * Otherwise the operation will accumulate all nodes from any previous
     * evaluations.
     */
    .exe:node:"exe"
    set:x:/@.exe/#/*

    /*
     * Adding above lambda into reference node above.
     */
    add:x:/@.exe/#
      src:x:/@hyper2lambda/*

    /*
     * Evaluating reference node, now containing our lambda object.
     */
    eval-mutable:x:/@.exe/#

    /*
     * Then converting lambda result to Hyperlambda, and returning back to client as JSON
     */
    lambda2hyper:x:/@.exe/#/*

    /*
     * Checking if output widget is visible, and if so, making sure we set the results
     * of evaluation.
     */
    if
      fetch:x:/0/0/0?value
        get-widget-property:hypereval-output-wrapper
          visible

      /*
       * Setting the results of our evaluation, and making sure we refetch the
       * code into CodeMirror editor on the client side of things.
       */
      set-widget-property:hypereval-output
        innerValue:x:/@lambda2hyper?value
      p5.web.send-javascript:@"p5.hypereval_output.getDoc().setValue(p5.$('hypereval-output').el.value);"
