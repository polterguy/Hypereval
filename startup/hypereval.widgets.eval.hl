
/*
 * Responsible for creating the CodeMirror Hyperlambda evaluator widget.
 */
create-event:hypereval.widgets.eval

  /*
   * Used to separate arguments from the rest of our lambda.
   */
  .signal

  /*
   * Decorating widget with arguments.
   */
  add:x:/../*/return/*/container
    src:x:/@.signal/--(!/_arg)

  /*
   * Returning widget to caller.
   */
  return
    container
      style:"margin-bottom:150px;"
      oninit

        /*
         * Making sure our page becomes a "dropzone" to allow user to upload 
         * a Hyperlambda file (which will populate the CodeMirror module with its code).
         */
        p5.io.unroll-path:@HYPEREVAL/
        split:x:/@p5.io.unroll-path?value
          =:/
        eval-x:x:/+/*/url
        micro.page.create-dropzone
          filter:hl
          multiple:false
          url:{0}/upload
            :x:/@split/0/-?name
          .onfinish:@"function(){p5.$('hypereval-evaluate-button').raise('.onupload',{onsuccess:function(ret, evt){if (ret.code){p5.hypereval_input.getDoc().setValue(ret.code);}}});}"

        /*
         * Including CodeMirror JavaScript.
         */
        p5.web.include-javascript-file
          @HYPEREVAL/media/codemirror/lib/codemirror.js
          @HYPEREVAL/media/codemirror/addon/selection/active-line.js
          @HYPEREVAL/media/codemirror/addon/display/fullscreen.js
          @HYPEREVAL/media/codemirror/addon/hint/show-hint.js
          @HYPEREVAL/media/codemirror/mode/hyperlambda/hyperlambda.js

        /*
         * Making sure necessary Stylesheet files are included
         */
        p5.web.include-css-file
          @HYPEREVAL/media/codemirror/lib/codemirror.css
          @HYPEREVAL/media/codemirror/theme/hyperlambda.css
          @HYPEREVAL/media/codemirror/addon/hint/show-hint.css
          @HYPEREVAL/media/codemirror/addon/display/fullscreen.css

        /*
         * Including Active Events JSON on page.
         */
        vocabulary
        join:x:/@vocabulary/*?value
          sep:,
          wrap:'
        p5.web.include-javascript:@"CodeMirror._hyperlispKeywords = [{0}];"
          :x:/@join?value

        /*
         * Transforming input textarea to CodeMirror instance.
         */
        p5.io.unroll-path:@HYPEREVAL/
        p5.web.send-javascript:@"p5.hypereval_input = CodeMirror.fromTextArea(p5.$('hypereval-input').el, {{
  mode:'hyperlambda',
  theme:'hyperlambda',
  lineNumbers:true,
  styleActiveLine:true,
  path:'{0}/media/codemirror/',
  autofocus:true,
  tabSize:2,
  indentAuto:true,
  extraKeys: {{
    'Ctrl-Space':'autocomplete',
    'Shift-Tab':'indentLess',
    'Tab':'indentMore',
    'Alt-F':function(cm) {{cm.setOption('fullScreen', !cm.getOption('fullScreen'));}},
    'Alt-E':function(cm) {{
      p5.$('hypereval-evaluate-button').raise('.onclick', {{
        onsuccess:function(ret, evt) {{
          if (ret.code) {{
            p5.hypereval_output.getDoc().setValue(ret.code);
          }}
        }}
      }});
    }}
  }}
}});
p5.hypereval_input.on('change',function (cMirror) {{
  p5.$('hypereval-input').el.value = cMirror.getValue();
}});
p5.hypereval_input.setSize('100%', '500px');"
          :x:/@p5.io.unroll-path?value

      widgets
        literal:hypereval-input
          element:textarea
          class:fill
          rows:20
          oninit

            /*
             * Setting focus initially to "input textarea".
             */
            micro.page.set-focus:x:/../*/_event?value

            /*
             * Checking if we have some code in our session.
             */
            p5.web.session.get:hypereval.code
            if:x:/@p5.web.session.get/*?value
              set-widget-property:hypereval-input
                innerValue:x:/@p5.web.session.get/*?value

        div
          class:right
          widgets
            div
              class:strip
              style:"display:inline-block;"
              widgets

                /*
                 * Evaluate Hyperlambda button.
                 */
                button:hypereval-evaluate-button
                  innerValue:Evaluate
                  title:Evaluates the Hyperlambda in your editor
                  onclick:@"p5.$('hypereval-evaluate-button').raise('.onclick',{onsuccess:function(ret, evt){if (ret.code){p5.hypereval_output.getDoc().setValue(ret.code);}}});return false;"
                  .onupload

                    /*
                     * Invoked after uploading of file has occurred, at which point our 
                     * session is supposed to contain the file's content.
                     *
                     * Hence, first we retrieve session value, before we return it to
                     * client, which updates the value of our "input CodeMirror" widget.
                     */
                    p5.web.session.get:hypereval.uploaded-file
                    p5.web.return-response-object:code
                      src:x:/@p5.web.session.get/*?value

                    /*
                     * Deleting session object.
                     */
                    p5.web.session.set:hypereval.uploaded-file

                  .onclick

                    /*
                     * Retrieving Hyperlambda and evaluating it.
                     */
                    .exe:node:"exe"
                    get-widget-property:hypereval-input
                      innerValue
                    hyper2lambda:x:/@get-widget-property/*/*?value
                    set:x:/@.exe/#/*
                    add:x:/@.exe/#
                      src:x:/@hyper2lambda/*
                    eval-mutable:x:/@.exe/#

                    /*
                     * Then converting lambda result to Hyperlambda, and returning back to client as JSON
                     */
                    lambda2hyper:x:/@.exe/#/*
                    get-widget-property:hypereval-output-wrapper
                      visible
                    if:x:/@get-widget-property/*/*?value
                      p5.web.return-response-object:code
                        src:x:/@lambda2hyper?value

                    /*
                     * Storing code in session, to make it more easily available.
                     */
                    p5.web.session.set:hypereval.code
                      src:x:/../*/get-widget-property/[0,1]/*/*?value

                /*
                 * View "Output" button.
                 */
                button
                  innerValue:Output
                  title:Display the output code, which results from evaluating your code
                  onclick

                    /*
                     * Toggles visibility of output.
                     */
                    get-widget-property:hypereval-output-wrapper
                      visible
                    if:x:/@get-widget-property/*/*?value
                      set-widget-property:hypereval-output-wrapper
                        visible:false
                    else
                      set-widget-property:hypereval-output-wrapper
                        visible:true

                /*
                 * Download Hyperlambda button.
                 */
                button:hypereval-download-button
                  innerValue:Download
                  title:Downloads the Hyperlambda in your editor to your client
                  onclick

                    /*
                     * Creates a temporary file containing Hyperlambda, 
                     * and allows user to download it to his client.
                     */
                    .defaults
                      hypereval.snippet-name:hypereval
                    p5.web.session.get:hypereval.snippet-name
                    get-widget-property:hypereval-input
                      innerValue
                    save-file:~/temp/hypereval-code.hl
                      src:x:/@get-widget-property/*/*?value
                    eval-x:x:/+/*/Content-Disposition
                    micro.download.file:~/temp/hypereval-code.hl
                      Content-Type:x-application/hyperlambda
                      Content-Disposition:@"attachment; filename=""{0}.hl"""
                        :x:(/@p5.web.session.get/*/hypereval.snippet-name|/@.defaults/*/hypereval.snippet-name)/$?value

                /*
                 * Upload Hyperlambda button.
                 */
                button
                  innerValue:Upload
                  title:Uploads a Hyperlambda file from your client
                  onclick:@"p5.dropzone.browse();event.stopPropagation(true);return false;"

                /*
                 * Save Hyperlambda button.
                 */
                button
                  innerValue:Save
                  title:Saves your current Hyperlambda to your snippets collection
                  onclick

                    /*
                     * Saving Hyperlambda to database, by allowing user to associate a name with snippet,
                     * through a modal window, for then to save the code with the specified name.
                     */
                    create-widgets
                      micro.widgets.modal:hypereval-save-modal
                        widgets
                          h3
                            innerValue:Supply a name please
                          p
                            innerValue:Notice, if you supply a name that already exists in your snippet collection, the old snippet will be deleted.
                          micro.widgets.wizard-form:hypereval-save-form
                            text
                              info:Name
                              .data-field:name
                              onkeydown:@"if (event.keyCode == 13) {p5.$('hypereval-save-modal-button').raise('onclick');return false;}"
                              oninit

                                /*
                                 * Setting initial focus to "Name" textbox.
                                 */
                                micro.page.set-focus:x:/../*/_event?value

                                /*
                                 * Checking if we have a snippet name in session, and
                                 * if so, we make sure we default our name to that value.
                                 */
                                p5.web.session.get:hypereval.snippet-name
                                if:x:/-/*?value
                                  set-widget-property:x:/../*/_event?value
                                    value:x:/@p5.web.session.get/*?value

                            div
                              class:right
                              widgets
                                button:hypereval-save-modal-button
                                  innerValue:Save
                                  style:"margin-bottom:0;"
                                  onclick

                                    /*
                                     * Serializing form, opening database connection,
                                     * deleting snippets with similar name, and saving snippet
                                     * into database.
                                     */
                                    get-widget-property:hypereval-input
                                      innerValue
                                    micro.widgets.wizard-form.value:hypereval-save-form
                                    p5.mysql.connect:[hypereval]
                                      p5.mysql.delete:@"delete from snippets where name = @name"
                                        @name:x:/@micro.widgets.wizard-form.value/*/name?value
                                      p5.mysql.insert:@"insert into snippets (name, content) values (@name, @content)"
                                        @name:x:/@micro.widgets.wizard-form.value/*/name?value
                                        @content:x:/@get-widget-property/*/*?value

                                    /*
                                     * Closing modal window, and giving user some feedback.
                                     */
                                    delete-widget:hypereval-save-modal
                                    micro.windows.info:Snippet was successfully saved
                                      class:micro-windows-info success

                                    /*
                                     * Making sure we store name used into session, in case
                                     * user wants to save the same snippet again.
                                     */
                                    p5.web.session.set:hypereval.snippet-name
                                      src:x:/@micro.widgets.wizard-form.value/*/name?value

                /*
                 * Load Hyperlambda button.
                 */
                button
                  innerValue:Load
                  title:Loads a snippet from your snippets collection
                  onclick

                    /*
                     * Displaying a modal window to user, to allow him to select 
                     * a Hyperlambda snippet to load.
                     */
                    create-widgets
                      micro.widgets.modal:hypereval-load-modal
                        widgets
                          h3
                            innerValue:Select a snippet
                          micro.widgets.grid:hypereval-snippet-grid
                            class:hover
                            oninit

                              /*
                               * Opening up database collection, selecting all snippets,
                               * and populating grid.
                               */
                              p5.mysql.connect:[hypereval]
                                p5.mysql.select:@"select name from snippets"

                                /*
                                 * Looping through each snippet, creating one grid item for each.
                                 */
                                for-each:x:/@p5.mysql.select/*/*?value
                                  eval-x:x:/+/*/*/*|/+/*/*/*/*/.name
                                  add:x:/..p5.mysql.connect/*/micro.widgets.grid.databind
                                    src
                                      item
                                        .row
                                          .name:x:/@_dp?value
                                          role:button
                                          onclick:@"p5.$(event.target.parentElement.id).raise('.onclick',{onsuccess:function(ret, evt){if (ret.code){p5.hypereval_input.getDoc().setValue(ret.code);}}});return false;"
                                          .onclick

                                            /*
                                             * Retrieves name of snippet clicked, loading it from database, populating
                                             * editor, and closing modal widget.
                                             */
                                            get-widget-property:x:/../*/_event?value
                                              .name
                                            p5.mysql.connect:[hypereval]
                                              p5.mysql.select:@"select content, name from snippets where name = @name"
                                                @name:x:/@get-widget-property/*/*?value
                                              p5.web.return-response-object:code
                                                src:x:/@p5.mysql.select/*/*/content?value
                                              p5.web.session.set:hypereval.snippet-name
                                                src:x:/@p5.mysql.select/*/*/name?value

                                            /*
                                             * Closing modal window.
                                             */
                                            delete-widget:hypereval-load-modal

                                            /*
                                             * Making sure our Hypereval remembers that this is our
                                             * "current code".
                                             */
                                            p5.web.session.set:hypereval.code
                                              src:x:/@p5.mysql.connect/*/p5.mysql.select/*/*/content?value

                                        name:x:/@_dp?value

                                /*
                                 * Databinding grid.
                                 */
                                micro.widgets.grid.databind:hypereval-snippet-grid

                /*
                 * Delete Hyperlambda snippet button.
                 */
                button
                  innerValue:Delete
                  title:Deletes the currently active snippet, if any
                  onclick

                    /*
                     * Retrieving snippet's name.
                     */
                    p5.web.session.get:hypereval.snippet-name
                    if:x:/-/*?value
                      not

                      /*
                       * No active snippet, warning use.
                       */
                      micro.windows.info:No active snippet
                        class:micro-windows-info

                    else

                      /*
                       * Opening up database connection, and deleting snippet.
                       */
                      p5.mysql.connect:[hypereval]
                        p5.mysql.delete:@"delete from snippets where name = @name"
                          @name:x:/@p5.web.session.get/*?value

                      /*
                       * Providing feedback to user.
                       */
                      micro.windows.info:Snippet was successfully deleted
                        class:micro-windows-info success

        div:hypereval-output-wrapper
          visible:false
          style:"clear:both;"
          widgets
            literal:hypereval-output
              element:textarea
              class:fill
              rows:10
              oninit

                /*
                 * Transforming output textarea to CodeMirror instance.
                 */
                p5.io.unroll-path:@HYPEREVAL/
                p5.web.send-javascript:@"p5.hypereval_output = CodeMirror.fromTextArea(p5.$('hypereval-output').el, {{
mode:'hyperlambda',
theme:'hyperlambda',
lineNumbers:true,
styleActiveLine:true,
path:'{0}/media/codemirror/',
tabSize:2,
indentAuto:true,
readOnly:true
}});"
                  :x:/@p5.io.unroll-path?value
