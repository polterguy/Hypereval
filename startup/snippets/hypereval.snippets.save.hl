
/*
 * Creates the __[hypereval.snippets.save]__ Active Event.
 */

/* This event creates a new Hypereval snippet.
 *
 * The event expects the snippet's name to be given as __[\_arg]__, and its Hyperlambda to
 * be found in __[content]__. In addition, you can optionally pass in __[type]__ being
 * the type of snippet, which can be e.g. _"page"_, _"startup"_ or _"snippet"_.
 * The default __[type]__ is _"snippet"_.
 *
 * __Notice__, you can (optionally) avoid giving __[content]__ a value, and instead pass
 * in your lambda as children of your __[content]__ argument, which then will be converted
 * into Hyperlambda, and treated as the actual content of your snippet.
 */
create-event:hypereval.snippets.save

  /*
   * Sanity checking arguments.
   */
  micro.lambda.contract.min:x:/..
    _arg:string
    content
  micro.lambda.contract.optional:x:/..
    type:string

  /*
   * Defaults.
   */
  .defaults
    type:snippet

  /*
   * Sanity checking name of snippet.
   */
  match:x:/../*/_arg?value
    src:regex:/^[-a-z0-9_ \.]{2,}$/i
  if:x:/@match/*?name
    not
    throw:Illegal snippet name. Use at least 2 characters, only spaces, a-z, A-Z, 0-9, '.', '_', ' ' and '-' in your snippet's name

  /*
   * Sanity checking [content].
   */
  if:x:/../*/content?value
    =:
    throw:No [content] value provided while trying to save snippet '{0}'
      :x:/../*/_arg?value

  /*
   * Checking if Hyperlambda was provided as value of [content].
   */
  if:x:/../*/content?value

    /*
     * Making sure snippet is a valid piece of Hyperlambda.
     *
     * This event invocation will throw and exception, if snippet is not valid Hyperlambda.
     */
    hyper2lambda:x:/../*/content?value

  else

    /*
     * Assuming [content] is a lambda object.
     */
    lambda2hyper:x:/../*/content/*
    set:x:/../*/content?value
      src:x:/@lambda2hyper?value

  /*
   * Opening up database connection, and saving our snippet to the database.
   */
  p5.mysql.connect:[hypereval]

    /*
     * Inserting new snippet.
     */
    p5.mysql.insert:@"insert into snippets (name, content, type) values (@name, @content, @type) on duplicate key update content = @content, type = @type"
      @name:x:/../*/_arg?value
      @content:x:/../*/content?value
      @type:x:(/../*/type|/@.defaults/*/type)/$?value
