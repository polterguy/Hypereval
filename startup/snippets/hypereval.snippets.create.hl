
/*
 * Creates a new snippet.
 *
 * It expects the snippet's name to be given as [_arg], and its Hyperlambda to
 * be found in [content]. In addition, you can optionally pass in [type] being
 * the type of snippet, which must be either "page", "startup" or "snippet".
 *  The default [type] is "snippet".
 */
create-event:hypereval.snippets.create

  /*
   * Sanity checking arguments.
   */
  micro.lambda.contract.min:x:/..
    _arg:string
    content:string
  micro.lambda.contract.optional:x:/..
    type:string

  /*
   * Making sure snippet is a valid piece of Hyperlambda.
   *
   * This event invocation will throw and exception, if snippet is not valid Hyperlambda.
   */
  hyper2lambda:x:/../*/content?value

  /*
   * Opening up database connection, and wrapping our insert operation in a
   * database transaction, to avoid deletion of old snippet, without successful
   * insert of new snippet.
   */
  p5.mysql.connect:[hypereval]

    /*
     * Inserting new snippet.
     */
    p5.mysql.insert:@"insert into snippets (name, content, type) values (@name, @content, @type) on duplicate key update content = @content, type = @type"
      @name:x:/../*/_arg?value
      @content:x:/../*/content?value
      @type:x:/../*/type?value
