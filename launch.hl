/*
 * File responsible for starting "Hypereval".
 *
 * This file is evaluated when the user clicks the "desktop icon" for the "Hypereval" app.
 */





/*
 * Checking if this is a request for a specific page.
 */
split:x:/../*/url?value
  =:?
split:x:/@split/0?name
  =:/
if:x:/@split/*?count
  >:int:1
  p5.mysql.connect:[hypereval]
    p5.mysql.select:@"select content from snippets where name = @name and type = 'page'"
      @name:x:/@split/1?name

    /*
     * Verifying page actually exists.
     */
    if:x:/@p5.mysql.select/*
      not

      /*
       * No such page.
       */
      p5.web.response.set-status-code:404
      p5.web.echo:This is where URLs goes to die ...
      return

    /*
     * Transforming Hyperlambda into lambda and evaluating it, before we return early,
     * to avoid evaluation of the rest of the file.
     */
    hyper2lambda:x:/@p5.mysql.select/*/*/content?value
    eval:x:/@hyper2lambda
    return





/*
 * Including Micro, selected skin, font CSS file, and main CSS file for Hypereval.
 */
eval-x:x:/+/*
micro.css.include
p5.web.include-css-file:@HYPEREVAL/media/main.css





/*
 * Checking if this is a "chrome less" instantiation.
 */
if:x:/../*/chrome?value
  =:bool:false

  /*
   * Removing "chrome", instantiating module as a "plugin".
   */
  set:x:/../*/create-widget/*/widgets/*/div/[0,1]
  add:x:/../*/create-widget/**/hypereval.widgets.eval
    src
      chrome:bool:false





/*
 * Creating main content container, making sure we set the title of our page.
 *
 * Notice, we don't set the title if this is a "plugin load" of module.
 */
if:x:/../*/chrome?value
  !=:bool:false
  p5.web.page.set-title:Hypereval
create-widget:hypereval-main-container
  class:container
  widgets
    div
      class:row
      widgets
        div
          class:col-100
          widgets
            h1
              innerValue:Hypereval
              style:"float:left;"
              events

                /*
                 * Sets the header text of module.
                 */
                hypereval.set-header
                  if:x:/../*/_arg?value
                    and:x:/../*/_arg?value
                      !=:
                    set-widget-property:x:/../*/_event?value
                      innerValue:Hypereval <small>{{{0}}}</small>
                        :x:/../*/_arg?value
                  else
                    set-widget-property:x:/../*/_event?value
                      innerValue:Hypereval

            div
              class:right
              widgets
                div
                  class:strip toolbar
                  widgets

                    button
                      innerValue:@"<span class=""icon-cog""></span>"
                      title:Settings
                      onclick

                        /*
                         * Showing settings for CM to user.
                         */
                        micro.codemirror.settings

                    /*
                     * Download Hyperlambda button.
                     */
                    button:hypereval-download-button
                      innerValue:@"<span class=""icon-download2""></span>"
                      title:Download snippet
                      onclick

                        /*
                         * Creates a temporary file containing Hyperlambda, 
                         * and allows user to download it to his client.
                         */
                        .defaults
                          hypereval.snippet-name:hypereval
                          type
                        p5.web.session.get:hypereval.snippet-name
                        if:x:/@p5.web.session.get/*?value
                          p5.mysql.connect:[hypereval]
                            p5.mysql.scalar:@"select type from snippets where name = @name"
                              @name:x:/@p5.web.session.get/*?value
                            if:x:/@p5.mysql.scalar?value
                              set:x:/@.defaults/*/type?value
                                src:.{0}
                                  :x:/@p5.mysql.scalar?value
                        get-widget-property:hypereval-input
                          innerValue

                        /*
                         * Checking if there is any code at all in current view.
                         */
                        if
                          trim:x:/@get-widget-property/*/*?value
                          =:

                          /*
                           * No code in editor.
                           */
                          micro.windows.info:There is no code in your Hyperlambda editor
                            class:micro-windows-info warning
                          return

                        save-file:~/temp/hypereval-code.hl
                          src:x:/@get-widget-property/*/*?value
                        eval-x:x:/+/*/Content-Disposition
                        micro.download.file:~/temp/hypereval-code.hl
                          Content-Type:x-application/hyperlambda
                          Content-Disposition:@"attachment; filename=""{0}{1}.hl"""
                            :x:(/@p5.web.session.get/*/hypereval.snippet-name|/@.defaults/*/hypereval.snippet-name)/$?value
                            :x:/@.defaults/*/type?value

                    /*
                     * Upload Hyperlambda button.
                     */
                    micro.widgets.upload-button
                      title:Upload snippet
                      multiple
                      accept:.zip,.hl
                      .onupload

                        /*
                         * Invoking file responsible for handling our upload request.
                         */
                        add:x:/../*/micro.evaluate.file
                          src:x:/../*/files
                        micro.evaluate.file:@HYPEREVAL/helpers/upload-file.hl

                        /*
                         * Providing feedback to user.
                         */
                        micro.windows.info:{0} files successfully imported
                          :x:/@micro.evaluate.file?value
                          class:micro-windows-info success

                    /*
                     * Export all snippets button.
                     */
                    button
                      innerValue:@"<span class=""icon-file-zip""></span>"
                      title:Exports snippets
                      onclick

                        /*
                         * Exports all snippets to a zip file.
                         *
                         * First we make sure our temp folder exists, and
                         * if it does, we empty it for any previous files.
                         */
                        if
                          fetch:x:/0/0?value
                            folder-exists:~/temp/hypereval/
                          not
                          create-folder:~/temp/hypereval/

                        /*
                         * Deleting all folders and files in our temporary folder.
                         */
                        list-files:~/temp/hypereval/
                        delete-file:x:/-/*?name
                        list-folders:~/temp/hypereval/
                        delete-folder:x:/-/*?name

                        /*
                         * Then we select all snippets, and create on Hyperlambda file
                         * for each, and save to our temporary folder.
                         */
                        p5.mysql.connect:[hypereval]
                          p5.mysql.select:@"select * from snippets"
                          for-each:x:/@p5.mysql.select/*
                            _type
                            if:x:/@_dp/#/*/type?value
                              set:x:/@_type?value
                                src:.{0}
                                  :x:/@_dp/#/*/type?value
                            save-file:~/temp/hypereval/{0}{1}.hl
                              :x:/@_dp/#/*/name?value
                              :x:/@_type?value
                              src:x:/@_dp/#/*/content?value

                        /*
                         * Creating a zip file of entire folder, and downloading
                         * it to client.
                         */
                        if
                          fetch:x:/0/0?value
                            file-exists:~/temp/hypereval-export.zip
                          delete-file:~/temp/hypereval-export.zip
                        zip:~/temp/hypereval-export.zip
                          src:~/temp/hypereval/
                        micro.download.file:~/temp/hypereval-export.zip
                          Content-Type:application/zip
                          Content-Disposition:@"attachment; filename=""hypereval-export.zip"""

                    button
                      innerValue:@"<span class=""icon-home3""></span>"
                      title:Close Hypereval
                      onclick

                        /*
                         * Redirecting user to server's root URL.
                         */
                        p5.web.get-root-location
                        p5.web.set-location:x:/-?value

    div
      class:row
      widgets
        div:hypereval-codemirror-wrapper
          class:col-100
          widgets
            hypereval.widgets.eval
